##------------------------------------------##
## Mapeo: SIPSA (precios mayoristas) - TCAC ##
##------------------------------------------##
# Cargar paquetes
library(tidyverse)
# Directorio
setwd("C:\\Users\\Portatil\\Desktop\\Least-cost-diets-and-affordability\\Proyecto Interno\\Precios al por mayor\\")
##---------------------------------##
## 1. Mapeo SIPSA-TCAC 2018 - 2023 ##
##---------------------------------##
# Cargar datos sobre precios mayoristas (SIPSA)
input <- vector(mode = "list", length = 6)
year <- 2013:2023
for (k in 1:length(year)) {
print(paste0("Done: ", year[k]))
input[[k]] <- readRDS(paste0("Bases historicas\\",year[k],".rds"))
}
overall_input <- do.call(rbind, input) %>% select(Fecha, Year, Month,
Grupo, Alimento, Mercado, Precio_kg)
# Eliminar duplicados
list_input <- data.frame(Alimento = levels(as.factor(overall_input$Alimento)))
# Extrar la base de datos TCAC desde el paqueute FoodpriceR
library(FoodpriceR)
tcac <- FoodpriceR::Mapeo_Sipsa_TCAC
# Mapeo simple
overall_tcac_sipsa <- merge(list_input, tcac, by = "Alimento", all.x = TRUE)
# Guardar
writexl::write_xlsx(overall_tcac_sipsa, "Mapeo SIPSA-TCAC\\1823_mapeo_sipsa_tcac.xlsx")
##---------------------------------##
## 1. Mapeo SIPSA-TCAC 2018 - 2024 ##
##---------------------------------##
rm(list = ls())
# Cargar datos sobre precios mayoristas (SIPSA)
input <- vector(mode = "list", length = 7)
year <- 2018:2024
for (k in 1:length(year)) {
print(paste0("Done: ", year[k]))
input[[k]] <- readRDS(paste0("Bases historicas\\",year[k],".rds"))
}
overall_input <- do.call(rbind, input) %>% select(Fecha, Year, Month,
Grupo, Alimento, Mercado, Precio_kg)
# Eliminar duplicados
list_input <- data.frame(Alimento = levels(as.factor(overall_input$Alimento)))
# Extrar la base de datos TCAC desde el paqueute FoodpriceR
library(FoodpriceR)
tcac <- FoodpriceR::Mapeo_Sipsa_TCAC
# Mapeo simple
overall_tcac_sipsa <- merge(list_input, tcac, by = "Alimento", all.x = TRUE)
# Guardar
writexl::write_xlsx(overall_tcac_sipsa, "Mapeo SIPSA-TCAC\\1824_mapeo_sipsa_tcac.xlsx")
##-----------------------------------##
## 2. Mapeo SIPSA-TCAC 2018 - 2024:  ##
##-----------------------------------##
rm(list = ls())
# Cargar datos sobre precios mayoristas (SIPSA)
input <- vector(mode = "list", length = 7)
year <- 2018:2024
for (k in 1:length(year)) {
print(paste0("Done: ", year[k]))
input[[k]] <- readRDS(paste0("Bases historicas\\",year[k],".rds"))
}
overall_input <- do.call(rbind, input) %>% select(Fecha, Year, Month,
Grupo, Alimento, Mercado)
# Crear la variable municipio
overall_input <- overall_input %>%
mutate(
Municipio = str_trim(str_extract(Mercado, "^[^(,]+"))
) %>% distinct()
# Extrar la base de datos TCAC desde el paqueute FoodpriceR
library(FoodpriceR)
tcac <- FoodpriceR::Mapeo_Sipsa_TCAC
# Mapeo simple
overall_tcac_sipsa <- merge(overall_input, tcac, by = "Alimento", all.x = TRUE)
overall_tcac_sipsa <- overall_tcac_sipsa %>% janitor::clean_names()
# Guardar
writexl::write_xlsx(overall_tcac_sipsa, "Mapeo SIPSA-TCAC\\1224_mun_mapeo_sipsa_tcac.xlsx")
length(levels(as.factor(overall_tcac_sipsa$alimento)))
levels(as.factor(overall_tcac_sipsa$municipio))
cali_data = overall_tcac_sipsa %>% filter(municipio == "Cali")
length(levels(as.factor(overall_tcac_sipsa$alimento)))
length(levels(as.factor(cali_data$alimento)))
levels(as.factor(overall_tcac_sipsa$municipio))
levels(as.factor(overall_tcac_sipsa$mercado))
levels(as.factor(overall_tcac_sipsa$municipio))
length(levels(as.factor(cali_data$alimento)))
View(data.frame(levels(as.factor(cali_data$alimento))))
writexl::write_xlsx(data.frame(alimento = levels(as.factor(cali_data$alimento))),
"Mapeo SIPSA-TCAC\\1324_campo_lista_alimentos.xlsx")
View(data.frame(alimento = levels(as.factor(cali_data$alimento))))
# Dataframe alimentos:
alimentos = data.frame(alimento = levels(as.factor(cali_data$alimento)))
alimentos
# Vector con nombres de las tiendas
tiendas <- c("Éxito Valle del Lili", "Éxito Calipso", "Éxito Unicentro")
# Crear columnas vacías para cada tienda: unidad y precio
cols <- unlist(lapply(tiendas, function(t) c(paste0(t, "_unidad"), paste0(t, "_precio"))))
# Crear nuevo data frame con columnas vacías y columna alimento
df_resultado <- data.frame(
alimento = alimentos$alimento,
matrix(NA, nrow = nrow(alimentos), ncol = length(cols))
)
# Asignar nombres de columnas
colnames(df_resultado)[-1] <- cols
# Mostrar el resultado
print(df_resultado)
View(df_resultado)
library(dplyr)
# Suponiendo que tu data frame original se llama `alimentos`
# y tiene una sola columna: alimento
tiendas <- c("Éxito Valle del Lili", "Éxito Calipso", "Éxito Unicentro")
# Columnas a crear: una para unidad y otra para precio por tienda
cols <- unlist(lapply(tiendas, function(t) c(paste0(t, "_unidad"), paste0(t, "_precio"))))
# Crear una fila vacía con las mismas columnas (NA en todo excepto alimento)
fila_vacia <- as.data.frame(matrix(NA, nrow = 1, ncol = length(cols) + 1))
colnames(fila_vacia) <- c("alimento", cols)
# Inicializar lista para almacenar los bloques
lista_filas <- list()
for (i in seq_len(nrow(alimentos))) {
fila_alimento <- fila_vacia
fila_alimento$alimento <- alimentos$alimento[i]
# Crear bloque: 1 fila con nombre del alimento + 3 vacías
bloque <- bind_rows(fila_alimento, fila_vacia, fila_vacia, fila_vacia)
lista_filas[[i]] <- bloque
}
# Unir todo
df_resultado <- bind_rows(lista_filas)
# Resultado
print(df_resultado)
View(df_resultado)
# Resultado
print(df_resultado)
writexl::write_xlsx(df_resultado, "Mapeo SIPSA-TCAC\\1324_lista_alimentos.xlsx")
writexl::write_xlsx(df_resultado, "Mapeo SIPSA-TCAC\\1324_lista_alimentos.xlsx")
writexl::write_xlsx(df_resultado, "Mapeo SIPSA-TCAC\\1324_campo_planilla.xlsx")
View(overall_input)
grupos = levels(as.factor(cali_data$alimento))
grupos = levels(as.factor(cali_data$grupo))
grupos
file.choose()
v4_stata = readRDS("C:\\Users\\Portatil\\Desktop\\informality-gap\\Input\\v4_output_imput.RDS")
View(v4_stata)
690+170
v4_stata$trab_form
test = v4_stata %>% filter(is.na(status_lab))
v4_stata$status
test = v4_stata %>% filter(is.na(status))
test
levels(as.factor(v4_stata$status))
grupos = levels(as.factor(cali_data$grupo))
grupos
# Cambiar grupos:
cali_data$grupo = toupper(cali_data$grupo)
grupos = levels(as.factor(cali_data$grupo))
grupos
grupos
cali_data$grupo[cali_data$grupo == "TUBERCULOS, RAICES Y PLATANOS"] = "TUBÉRCULOS, RAÍCES Y PLÁTANOS"
grupos = levels(as.factor(cali_data$grupo))
grupos
cali_data$grupo[cali_data$grupo == "LACTEOS Y HUEVOS"] = "LÁCTEOS Y HUEVOS"
grupos = levels(as.factor(cali_data$grupo))
grupos
k = 1
print(grupos[k])
k = grupos[1]
# Dataframe alimentos:
df.aux = cali_data %>% filter(grupo == k)
df.aux
View(df.aux)
dplyr::count(cali_data, grupo)
dplyr::count(cali_data, grupo)$n
dplyr::count(cali_data, grupo)$n %>% sum()
k = grupos[1]
# Dataframe alimentos:
df.aux = cali_data %>% filter(grupo == k)
df.aux
alimentos = data.frame(alimento = levels(as.factor(cali_data$alimento)))
# Cambiar grupos:
cali_data$grupo = toupper(cali_data$grupo)
cali_data$grupo[cali_data$grupo == "TUBERCULOS, RAICES Y PLATANOS"] = "TUBÉRCULOS, RAÍCES Y PLÁTANOS"
cali_data$grupo[cali_data$grupo == "LACTEOS Y HUEVOS"] = "LÁCTEOS Y HUEVOS"
grupos = levels(as.factor(cali_data$grupo))
grupos
for (k in grupos) {
print(k)
# Dataframe alimentos:
df.aux = cali_data %>% filter(grupo == k)
alimentos = data.frame(alimento = levels(as.factor(cali_data$alimento)))
library(dplyr)
# Suponiendo que tu data frame original se llama `alimentos`
# y tiene una sola columna: alimento
tiendas <- c("Éxito Valle del Lili", "Éxito Calipso", "Éxito Unicentro")
# Columnas a crear: una para unidad y otra para precio por tienda
cols <- unlist(lapply(tiendas, function(t) c(paste0(t, "_unidad"), paste0(t, "_precio"))))
# Crear una fila vacía con las mismas columnas (NA en todo excepto alimento)
fila_vacia <- as.data.frame(matrix(NA, nrow = 1, ncol = length(cols) + 1))
colnames(fila_vacia) <- c("alimento", cols)
# Inicializar lista para almacenar los bloques
lista_filas <- list()
# Sacar un excel por grupo
for (i in seq_len(nrow(alimentos))) {
fila_alimento <- fila_vacia
fila_alimento$alimento <- alimentos$alimento[i]
# Crear bloque: 1 fila con nombre del alimento + 3 vacías
bloque <- bind_rows(fila_alimento, fila_vacia, fila_vacia, fila_vacia)
lista_filas[[i]] <- bloque
}
# Unir todo
df_resultado <- bind_rows(lista_filas)
# Resultado
print(df_resultado)
writexl::write_xlsx(df_resultado, paste0("Mapeo SIPSA-TCAC\\",
k,"_1324_campo_planilla.xlsx"))
}
for (k in grupos) {
print(k)
# Dataframe alimentos:
df.aux = cali_data %>% filter(grupo == k)
alimentos = data.frame(alimento = levels(as.factor(df.aux$alimento)))
library(dplyr)
# Suponiendo que tu data frame original se llama `alimentos`
# y tiene una sola columna: alimento
tiendas <- c("Éxito Valle del Lili", "Éxito Calipso", "Éxito Unicentro")
# Columnas a crear: una para unidad y otra para precio por tienda
cols <- unlist(lapply(tiendas, function(t) c(paste0(t, "_unidad"), paste0(t, "_precio"))))
# Crear una fila vacía con las mismas columnas (NA en todo excepto alimento)
fila_vacia <- as.data.frame(matrix(NA, nrow = 1, ncol = length(cols) + 1))
colnames(fila_vacia) <- c("alimento", cols)
# Inicializar lista para almacenar los bloques
lista_filas <- list()
# Sacar un excel por grupo
for (i in seq_len(nrow(alimentos))) {
fila_alimento <- fila_vacia
fila_alimento$alimento <- alimentos$alimento[i]
# Crear bloque: 1 fila con nombre del alimento + 3 vacías
bloque <- bind_rows(fila_alimento, fila_vacia, fila_vacia, fila_vacia)
lista_filas[[i]] <- bloque
}
# Unir todo
df_resultado <- bind_rows(lista_filas)
# Resultado
print(df_resultado)
writexl::write_xlsx(df_resultado, paste0("Mapeo SIPSA-TCAC\\trabajo_campo\\",
k,"_1324_campo_planilla.xlsx"))
}
