tags$div(class = "accordion-body",
tags$ul(
tags$li(strong("Grupo demográfico"), ": Categoría definida por edad y sexo utilizada para estimar requerimientos nutricionales."),
tags$li(strong("Sexo"), ": Clasificación binaria utilizada en los modelos: 0 = Hombre, 1 = Mujer."),
tags$li(strong("Edad"), ": Se agrupa en rangos poblacionales como 1–3 años, 4–8 años, etc.")
)
)
)
),
# Indicadores y variables
tags$div(class = "accordion-item",
tags$h2(class = "accordion-header", id = "headingIndicadores",
tags$button(class = "accordion-button collapsed", `data-bs-toggle` = "collapse", `data-bs-target` = "#collapseIndicadores",
"Indicadores y variables de análisis")
),
tags$div(id = "collapseIndicadores", class = "accordion-collapse collapse", `aria-labelledby` = "headingIndicadores", `data-bs-parent` = "#glosarioGeneralAccordion",
tags$div(class = "accordion-body",
tags$ul(
tags$li(strong("Cost_1000kcal"), ": Costo promedio por cada 1000 kilocalorías."),
tags$li(strong("cost_day"), ": Costo total diario de la dieta por persona."),
tags$li(strong("serv"), ": Lista de alimentos representativos por grupo alimentario (en CoRD)."),
tags$li(strong("diverse"), ": Criterio de diversidad alimentaria mínima (en CoRD).")
)
)
)
)
)
)
)
)
panel_inicio = tabPanel("Inicio",
fluidPage(
# Encabezado con logo y bienvenida
fluidRow(
column(12, align = "center",
tags$img(src = "logo_FoodPriceR.png", height = "130px"),
h1("Bienvenido a la Plataforma FoodPrice"),
tags$p(style = "font-size:18px;",
"El acceso económico a los alimentos es condición necesaria, aunque no suficiente, para garantizar la seguridad alimentaria."),
tags$p(style = "font-size:16px;",
"Esta plataforma permite evaluar la dimensión económica de la seguridad alimentaria usando métricas basadas en dietas de costo mínimo.")
)
),
br(),
# Tarjetas de métricas
fluidRow(
column(4,
tags$div(style = "border: 1px solid #e2e2e2; border-radius: 10px; padding: 15px; height: 100%;",
tags$i(class = "fas fa-bolt", style = "font-size: 28px; color: red;"),
h4("CoCA"),
p("Costo mínimo de una dieta suficiente en energía.")
)
),
column(4,
tags$div(style = "border: 1px solid #e2e2e2; border-radius: 10px; padding: 15px; height: 100%;",
tags$i(class = "fas fa-apple-alt", style = "font-size: 28px; color: orange;"),
h4("CoNA"),
p("Costo mínimo de una dieta adecuada en nutrientes.")
)
),
column(4,
tags$div(style = "border: 1px solid #e2e2e2; border-radius: 10px; padding: 15px; height: 100%;",
tags$i(class = "fas fa-seedling", style = "font-size: 28px; color: green;"),
h4("CoRD"),
p("Costo mínimo de una dieta saludable o recomendada.")
)
)
),
br(),
# Sección ¿Qué había antes?
fluidRow(
column(12,
h3("¿Qué había antes?"),
p("La plataforma FoodPrice se basa en el paquete en R ", code("FoodpriceR"),
", que permite realizar estos cálculos directamente desde R."),
p("Puedes instalar el paquete con el siguiente código:"),
tags$pre("remotes::install_github(\"lea-puj/FoodpriceR\")"),
tags$pre("library(FoodpriceR)")
)
),
br(),
# Documentos de interés
fluidRow(
column(12,
h3("Documentos de interés"),
# Documento 1
fluidRow(
column(3, tags$img(src = "documento-preview.jpeg", width = "80%")),
column(9,
tags$strong("González, D.; Barona, S.A.; Ordoñez, J.C. (2024)."),
p("FoodPrice: Un paquete en R para la estimación de dietas de costo mínimo. Documento de Trabajo 02/24. 30 p."),
p("Este paquete proporciona herramientas para estimar el costo mínimo de una dieta con suficiencia energética, adecuación nutricional y promoción de salud."),
tags$a(href = "https://hdl.handle.net/10568/155125",
"https://hdl.handle.net/10568/155125", target = "_blank")
)
),
br(),
# Documento 2
fluidRow(
column(3, tags$img(src = "cambridge-preview.png", width = "80%")),
column(9,
tags$strong("Yoshioka Vargas AM, Zea León M del P, Girón Cruz LE, et al. (2025)"),
p("Cost and affordability of three levels of diet quality for urban households in Colombia."),
em(" Public Health Nutrition."),
p("Este artículo compara el costo y la asequibilidad de dietas mínimas, adecuadas y saludables para hogares urbanos en Colombia."),
tags$a(href = "https://doi.org/10.1017/S1368980025000564",
"https://doi.org/10.1017/S1368980025000564", target = "_blank")
)
)
)
),
br(),
# Aliados
fluidRow(
column(12,
h3("Aliados"),
fluidRow(
column(6, tags$img(src = "Alliance Logo Refresh-color.jpg", height = "160px", style = "display:block; margin:auto;")),
column(6, tags$img(src = "Banco-de-la-republica.png", height = "160px", style = "display:block; margin:auto;"))
)
)
),
br(), br(),
# Equipo
fluidRow(
column(12,
h3("Equipo"),
p("(Nombres, cargo y correo (¿foto?))")
)
)
)
)
# ----------------------
# Cargamos librerías
# ----------------------
library(shiny)
library(bslib)
library(shinyBS)
library(plotly)
library(rhandsontable)
ui <- navbarPage(
title = div(
tags$img(src = "logo_FoodPriceR2.png",
height = "120px",
style = "margin-right:10px;")
),
theme = bs_theme(
version = 5,
bootswatch = "flatly",
primary = "#2c582b",
secondary = "#f6bc2d",
base_font = font_google("DM Sans")
),
id = "main_navbar",
# Estilo para separar ítems del navbar
header = tags$head(
tags$link(rel = "stylesheet",
type = "text/css",
href = "custom.css")
),
panel_inicio,
tabPanel("Metodología",
fluidPage(
withMathJax(),
tags$head(
tags$style(HTML(".dieta-verde { color: #2c582b; font-weight: bold; }"))
),
h2("Metodología"),
p("La plataforma FoodPrice utiliza métricas estandarizadas para estimar el costo mínimo de dietas con tres niveles crecientes de calidad nutricional. Estas métricas son:"),
tags$ul(
tags$li(tags$span(class = "dieta-verde", "CoCA"), ": Costo de una Dieta Suficiente en Energía. Estima el costo mínimo de una dieta que cumple con los requerimientos energéticos diarios (EER)."),
tags$li(tags$span(class = "dieta-verde", "CoNA"), ": Costo de una Dieta Adecuada en Nutrientes. Además de cumplir con la energía, incluye restricciones mínimas y máximas de macronutrientes y micronutrientes esenciales."),
tags$li(tags$span(class = "dieta-verde", "CoRD"), ": Costo de una Dieta Recomendada o Saludable. Calcula el costo mínimo para una dieta que respeta las recomendaciones de las Guías Alimentarias Basadas en Alimentos (FBDGs), diferenciadas por grupos alimentarios y con criterios de diversidad inter e intragrupal.")
),
h3("Estimación de las métricas"),
p("Las métricas ", tags$span(class = "dieta-verde", "CoCA"), " y ", tags$span(class = "dieta-verde", "CoNA"), " se estiman mediante problemas de programación lineal (MPL). En el caso de ", tags$span(class = "dieta-verde", "CoCA"), ", se minimiza el costo total de alimentos sujetos a una única restricción de energía. La formulación matemática es la siguiente:"),
helpText("$$\\text{CoCA} = \\min_{x_1, ..., x_n} \\sum_{j=1}^J p_j x_j$$"),
helpText("$$\\text{sujeto a: } \\sum_{j=1}^J e_j x_j = EER \\quad ; \\quad x_j \\geq 0$$"),
p("La solución óptima selecciona el alimento con menor relación precio/energía:"),
helpText("$$x^*_j = \\begin{cases} \\frac{EER}{e_k}, & \\text{si } \\frac{p_j}{e_j} = \\min_j \\left\\{ \\frac{p_j}{e_j} \\right\\} \\\\ 0, & \\text{en otro caso} \\end{cases}$$"),
br(),
p("Para ", tags$span(class = "dieta-verde", "CoNA"), ", se considera una formulación más compleja que incluye restricciones adicionales para asegurar niveles adecuados de nutrientes específicos. Se utilizan límites inferiores y superiores para cada nutriente:"),
helpText("$$\\text{CoNA} = \\min_{x_1, ..., x_n} \\sum_{j=1}^J p_j x_j$$"),
helpText("$$\\text{sujeto a: } \\sum_{j=1}^J e_j x_j = EER$$"),
helpText("$$L_k \\leq \\sum_{j=1}^J a_{jk} x_j \\leq U_k \\quad \\text{para todo } k = 1, ..., K$$"),
helpText("$$x_j \\geq 0$$"),
br(),
p("Finalmente, ", tags$span(class = "dieta-verde", "CoRD"), " se basa en estudios previos (Herforth et al., 2019; Raghunathan et al., 2021) y se construye como una dieta que, al mínimo costo, cumple con las recomendaciones alimentarias de las FBDGs, incorporando condiciones de diversidad entre y dentro de los grupos de alimentos."),
h3("Análisis de sensibilidad"),
p("El modelo de programación lineal también permite identificar nutrientes limitantes, es decir, aquellos que más restringen la solución óptima del modelo por estar cercanos a sus niveles mínimos requeridos. Un nutriente \\( p \\) se considera limitante si:"),
helpText("$$\\sum_{j=1}^J a_{jp} x_j^* = L_p$$"),
p("Aunque hay correlación, los nutrientes limitantes no implican necesariamente una deficiencia nutricional en la población (Masters et al., 2018; Dizon & Herforth, 2018; Headey & Alderman, 2019)."),
br(),
p("Además, se calcula la elasticidad de precio sombra \\( \\eta_k \\) para cada nutriente en CoNA, la cual mide el cambio porcentual en el costo mínimo óptimo de la dieta (CoNA*) ante un incremento del 1% en el requerimiento del nutriente \\( k \\):"),
helpText("$$\\eta_k = \\frac{\\Delta \\% \\text{CoNA}^*}{\\Delta DRI_k}$$"),
helpText("$$DRI_k \\in [L_k, U_k]$$"),
p("Esto permite evaluar la sensibilidad del modelo frente a variaciones en las recomendaciones nutricionales.")
)
),
navbarMenu("FoodPrice Colombia",
tabPanel("CoCA",
sidebarLayout(
sidebarPanel(
selectInput("month", "Seleccionar Mes:", choices = 1:12),
selectInput("year", "Seleccionar Año:", choices = 2013:2023),
selectInput("eer", "Seleccionar EER:", choices = c("EER nacionales", "Definir EER")),
conditionalPanel(
condition = "input.eer == 'Definir EER'",
h4("Definir requerimientos energéticos"),
rHandsontableOutput("hot_table_col_manual_eer"),
br()
),
selectInput("ciudad_coca", "Seleccionar ciudad:", choices = NULL),
actionButton("refrescar_coca", "Refrescar resultados"),
br(),
actionButton("goButton_col", "Estimar CoCA"),
checkboxInput("show_table_col", "Ver tabla de resultados", value = FALSE),
downloadButton("download_col_results", "Descargar resultados (.csv)")
),
mainPanel(
h4("Selecciona una ciudad en el mapa para estimar los resultados", style = "color:#2c582b; font-weight:bold; margin-top:20px;"),
textOutput("ciudad_activa_coca"),
leafletOutput("mapa_coca", height = "400px"),
br(),
h4(textOutput("titulo_resultado_coca")),
uiOutput("kpi_ui"),
plotlyOutput("plot_col"),
DT::dataTableOutput("coca_table_col")
)
)
),
tabPanel("CoNA",
sidebarLayout(
sidebarPanel(
selectInput("month_cona", "Seleccionar Mes:", choices = 1:12),
selectInput("year_cona", "Seleccionar Año:", choices = 2013:2023),
selectInput("eer_cona", "Seleccionar requerimientos:", choices = c("EER nacionales", "Definir manualmente")),
conditionalPanel(
condition = "input.eer_cona == 'Definir manualmente'",
h5("Definir requerimientos mínimos (EER_LL):"),
rHandsontableOutput("hot_table_cona_manual_eerll"),
br(),
h5("Definir requerimientos máximos (UL):"),
rHandsontableOutput("hot_table_cona_manual_ul"),
br()
),
selectInput("ciudad_cona", "Seleccionar ciudad:", choices = NULL),
actionButton("refrescar_conaa", "Refrescar resultados"),
br(),
actionButton("goButton_cona", "Estimar CoNA"),
checkboxInput("show_table_cona", "Ver tabla de resultados", value = FALSE),
downloadButton("download_cona_results", "Descargar resultados (.csv)")
),
mainPanel(
h4("Selecciona una ciudad en el mapa para estimar los resultados", style = "color:#2c582b; font-weight:bold; margin-top:20px;"),
h4(textOutput("ciudad_activa_cona")),
leafletOutput("mapa_ciudades", height = "400px"),
br(),
uiOutput("kpi_cona_ui"),
DT::dataTableOutput("cona_table"),
plotlyOutput("plot_cona")
)
)
),
tabPanel("CoRD",
sidebarLayout(
sidebarPanel(
selectInput("month_cord", "Seleccionar Mes:", choices = 1:12),
selectInput("year_cord", "Seleccionar Año:", choices = 2013:2023),
selectInput("input_cord_mode", "Seleccionar requerimientos:", choices = c("Parámetros nacionales", "Definir manualmente")),
conditionalPanel(
condition = "input.input_cord_mode == 'Definir manualmente'",
h5("Porciones por grupo (serv):"),
rHandsontableOutput("hot_table_cord_manual_serv"),
br(),
h5("Diversidad por grupo (diverse):"),
rHandsontableOutput("hot_table_cord_manual_diverse"),
br()
),
selectInput("ciudad_cord", "Seleccionar ciudad:", choices = NULL),
actionButton("refrescar_cord", "Refrescar resultados"),
br(),
actionButton("goButton_cord", "Estimar CoRD"),
checkboxInput("show_table_cord", "Ver tabla de resultados", value = FALSE),
downloadButton("download_cord_results", "Descargar resultados (.csv)")
),
mainPanel(
h4("Selecciona una ciudad en el mapa para estimar los resultados", style = "color:#2c582b; font-weight:bold; margin-top:20px;"),
h4(textOutput("ciudad_activa_cord")),
leafletOutput("mapa_cord", height = "400px"),
br(),
uiOutput("kpi_cord_ui"),
plotlyOutput("plot_cord"),
conditionalPanel(
condition = "input.show_table_cord == true",
DT::dataTableOutput("cord_table")
)
)
)
),
),
tabPanel("Cálculo Manual de Dietas",
tabsetPanel(
tabPanel("CoCA - Manual",
sidebarLayout(
sidebarPanel(
h4("Paso a paso para cargar datos"),
downloadButton("plantilla_coca", "Descargar Plantilla CoCA"),
br(), br(),
fileInput("archivo_coca", "Sube tu archivo de alimentos (.xlsx):", accept = ".xlsx"),
fileInput("eer_coca", "Sube el archivo de requerimientos energéticos (.xlsx):", accept = ".xlsx"),
actionButton("runButton_coca_manual", "Ejecutar CoCA"),
checkboxInput("show_table_coca_manual", "Ver resultados", value = TRUE)
),
mainPanel(
h4("Resultados CoCA - Manual"),
DTOutput("tabla_coca_manual"),
plotOutput("grafico_coca_manual")
)
)
),
tabPanel("CoNA - Manual",
sidebarLayout(
sidebarPanel(
h4("Paso a paso para cargar datos"),
downloadButton("plantilla_cona", "Descargar Plantilla CoNA"),
br(), br(),
fileInput("archivo_cona", "Sube tu archivo de alimentos (.xlsx):", accept = ".xlsx"),
fileInput("eerll_cona", "Sube el archivo de requerimientos mínimos (EER inferior) (.xlsx):", accept = ".xlsx"),
fileInput("ul_cona", "Sube el archivo de requerimientos máximos (UL) (.xlsx):", accept = ".xlsx"),
actionButton("runButton_cona_manual", "Ejecutar CoNA"),
checkboxInput("show_table_cona_manual", "Ver resultados", value = TRUE)
),
mainPanel(
h4("Resultados CoNA - Manual"),
DTOutput("tabla_cona_manual"),
plotOutput("grafico_cona_manual")
)
)
),
tabPanel("CoRD - Manual",
sidebarLayout(
sidebarPanel(
h4("Paso a paso para cargar datos"),
downloadButton("plantilla_cord", "Descargar Plantilla CoRD"),
br(), br(),
fileInput("archivo_cord", "Sube tu archivo de alimentos (.xlsx):", accept = ".xlsx"),
fileInput("serv_cord", "Sube el archivo de porciones por grupo (.xlsx):", accept = ".xlsx"),
fileInput("diverse_cord", "Sube el archivo de diversidad por grupo (.xlsx):", accept = ".xlsx"),
actionButton("runButton_cord_manual", "Ejecutar CoRD"),
checkboxInput("show_table_cord_manual", "Ver resultados", value = TRUE)
),
mainPanel(
h4("Resultados CoRD - Manual"),
DTOutput("tabla_cord_manual"),
plotOutput("grafico_cord_manual")
)
)
),
# Asistente IA
tabPanel("Asistente IA",
sidebarLayout(
sidebarPanel(
textInput("user_question", "Escribe una pregunta para el asistente:"),
actionButton("ask_ia", "Preguntar a FoodBot")
),
mainPanel(
h4("Conversación con FoodBot"),
uiOutput("conversation_box")
)
)
)
)
),
tabPanel("Glosario",
fluidPage(
h2("Glosario de Términos Generales", style = "margin-bottom: 20px;"),
tags$div(class = "accordion", id = "glosarioGeneralAccordion",
# Dietas
tags$div(class = "accordion-item",
tags$h2(class = "accordion-header", id = "headingDietas",
tags$button(class = "accordion-button", `data-bs-toggle` = "collapse", `data-bs-target` = "#collapseDietas",
"Modelos de Dieta: CoCA, CoNA y CoRD")
),
tags$div(id = "collapseDietas", class = "accordion-collapse collapse show", `aria-labelledby` = "headingDietas", `data-bs-parent` = "#glosarioGeneralAccordion",
tags$div(class = "accordion-body",
tags$ul(
tags$li(strong("CoCA"), ": Costo Diario de una Dieta Asequible, basada en alimentos locales y requerimientos energéticos mínimos."),
tags$li(strong("CoNA"), ": Costo Diario de una Dieta Adecuada en Nutrientes, que cumple con recomendaciones mínimas y máximas de nutrientes esenciales."),
tags$li(strong("CoRD"), ": Costo Diario de una Dieta Diversificada y Saludable, alineada con las guías alimentarias nacionales.")
)
)
)
),
# Unidades y abreviaciones
tags$div(class = "accordion-item",
tags$h2(class = "accordion-header", id = "headingUnidades",
tags$button(class = "accordion-button collapsed", `data-bs-toggle` = "collapse", `data-bs-target` = "#collapseUnidades",
"Unidades y abreviaciones")
),
tags$div(id = "collapseUnidades", class = "accordion-collapse collapse", `aria-labelledby` = "headingUnidades", `data-bs-parent` = "#glosarioGeneralAccordion",
tags$div(class = "accordion-body",
tags$ul(
tags$li(strong("kcal"), ": Kilocaloría, unidad de medida de energía."),
tags$li(strong("g"), ": Gramos."),
tags$li(strong("COP"), ": Pesos colombianos."),
tags$li(strong("EER"), ": Estimated Energy Requirements, o requerimiento energético estimado diario."),
tags$li(strong("UL"), ": Upper Limit. Límite superior de consumo de nutrientes.")
)
)
)
),
# Grupo demográfico
tags$div(class = "accordion-item",
tags$h2(class = "accordion-header", id = "headingGrupos",
tags$button(class = "accordion-button collapsed", `data-bs-toggle` = "collapse", `data-bs-target` = "#collapseGrupos",
"Población y grupos demográficos")
),
tags$div(id = "collapseGrupos", class = "accordion-collapse collapse", `aria-labelledby` = "headingGrupos", `data-bs-parent` = "#glosarioGeneralAccordion",
tags$div(class = "accordion-body",
tags$ul(
tags$li(strong("Grupo demográfico"), ": Categoría definida por edad y sexo utilizada para estimar requerimientos nutricionales."),
tags$li(strong("Sexo"), ": Clasificación binaria utilizada en los modelos: 0 = Hombre, 1 = Mujer."),
tags$li(strong("Edad"), ": Se agrupa en rangos poblacionales como 1–3 años, 4–8 años, etc.")
)
)
)
),
# Indicadores y variables
tags$div(class = "accordion-item",
tags$h2(class = "accordion-header", id = "headingIndicadores",
tags$button(class = "accordion-button collapsed", `data-bs-toggle` = "collapse", `data-bs-target` = "#collapseIndicadores",
"Indicadores y variables de análisis")
),
tags$div(id = "collapseIndicadores", class = "accordion-collapse collapse", `aria-labelledby` = "headingIndicadores", `data-bs-parent` = "#glosarioGeneralAccordion",
tags$div(class = "accordion-body",
tags$ul(
tags$li(strong("Cost_1000kcal"), ": Costo promedio por cada 1000 kilocalorías."),
tags$li(strong("cost_day"), ": Costo total diario de la dieta por persona."),
tags$li(strong("serv"), ": Lista de alimentos representativos por grupo alimentario (en CoRD)."),
tags$li(strong("diverse"), ": Criterio de diversidad alimentaria mínima (en CoRD).")
)
)
)
)
)
)
)
)
# ----------------------
library(shiny)
library(bslib)
library(shinyBS)
library(plotly)
library(rhandsontable)
# ----------------------
# Cargamos librerías
# ----------------------
library(shiny)
library(bslib)
library(shinyBS)
library(plotly)
library(leaflet)
library(DT)
library(sf)
library(dplyr)
library(rhandsontable)
library(openai)
library(shiny)
library(readxl)
library(stringr)
library(FoodpriceR)
library(shiny)
library(shinyBS)
setwd("C:\\Users\\danie\\OneDrive\\Escritorio\\test_FoodpriceR_platform\\")
source("ui/panel_inicio.R")
source("ui.R")
source("server.R")
# Ejecuta la aplicación
shiny::runApp()
## Prueba: predicción usando modelos ##
##         de corto y largo plazo    ##
##-----------------------------------##
# Cargar librerías
library(tidyverse)
library(dynlm)
library(ggplot2)
library(tibble)
library(lubridate)
library(forecast)
library(seastests)
library(aTSA)
library(zoo)
library(patchwork)
library(urca)
# Definir directorio de trabajo
setwd("C:\\Users\\danie\\OneDrive\\Escritorio\\Least-cost-diets-and-affordability\\Proyecto Interno\\")
## -----------------------##
## 1. Datos               ##
## -----------------------##
# Cargar datos
all_ts <- readxl::read_excel("Time-series\\V4_ipc_sipsa.xlsx")
# Cambiar formato
all_ts <- all_ts %>%
mutate(
fecha = as.Date(paste(ano, mes_num, "01", sep = "-")),
precio_ipc = as.numeric(precio_500g),
precio_sipsa = as.numeric(precio_medio)
) %>%
select(fecha, nombre_ciudad, articulo, sipsa, precio_ipc, precio_sipsa)
View(all_ts)
writexl::write_xlsx(all_ts, "Time-series\\V5_ipc_sipsa.xlsx")
